def caesar():
    text=input("Enter text: ")
    shift=int(input("Enter shift value in number: "))
    encrypted=""
    for c in text:
        if c.isupper():
            c_index=ord(c)-ord("A")
            new_index=(c_index+shift)%26+ord("A")
            new_character=chr(new_index)
            encrypted=encrypted+new_character

        elif c.islower():
            c_index=ord(c)-ord("a")
            new_index=(c_index+shift)%26+ord("a")
            new_character=chr(new_index)
            encrypted=encrypted+new_character

        elif c.isdigit():
            new_character=(int(c)+shift)%10
            encrypted=encrypted+str(new_character)

        elif  c in punctuations:
            new_character=(punctuations.find(str(c))+shift)%30
            encrypted=encrypted+punctuations[new_character]

        else:
            encrypted +=c

    print("Plain text: ",text)
    print("Encrypted text: ",encrypted)

def De_Caesar():
    encrypted_text=input("Enter Encrypted text: ")
    shift=int(input("Enter shift value in number: "))
    decrypted=""
    for c in encrypted_text:
        if c.isupper():
            c_index=ord(c)-ord("A")
            new_index=(c_index-shift)%26+ord("A")
            new_character=chr(new_index)
            decrypted=decrypted+new_character

        elif c.islower():
            c_index=ord(c)-ord("a")
            new_index=(c_index-shift)%26+ord("a")
            new_character=chr(new_index)
            decrypted=decrypted+new_character

        elif c.isdigit():
            new_character=(int(c)-shift)%10
            decrypted=decrypted+str(new_character)

        elif  c in punctuations:
            new_character=(punctuations.find(str(c))-shift)%30
            decrypted=decrypted+punctuations[new_character]

        else:
            decrypted +=c

    print("Encrypted text: ",encrypted_text)
    print("Decrypted text: ",decrypted)

def rot_13():
    text=input("Enter text: ")
    shift=int(13)
    encrypted=""
    for c in text:
        if c.isupper():
            c_index=ord(c)-ord("A")
            new_index=(c_index+shift)%26+ord("A")
            new_character=chr(new_index)
            encrypted=encrypted+new_character

        elif c.islower():
            c_index=ord(c)-ord("a")
            new_index=(c_index+shift)%26+ord("a")
            new_character=chr(new_index)
            encrypted=encrypted+new_character

        elif c.isdigit():
            new_character=(int(c)+shift)%10
            encrypted=encrypted+str(new_character)

        elif  c in punctuations:
            new_character=(punctuations.find(str(c))+shift)%30
            encrypted=encrypted+punctuations[new_character]

        else:
            encrypted +=c

    print("Plain text: ",text)
    print("Encrypted text: ",encrypted)

def De_rot_13():
    text=input("Enter Encrypted text: ")
    shift=int(13)
    decrypted=""
    for c in text:
        if c.isupper():
            c_index=ord(c)-ord("A")
            new_index=(c_index-shift)%26+ord("A")
            new_character=chr(new_index)
            decrypted=decrypted+new_character

        elif c.islower():
            c_index=ord(c)-ord("a")
            new_index=(c_index-shift)%26+ord("a")
            new_character=chr(new_index)
            decrypted=decrypted+new_character

        elif c.isdigit():
            new_character=(int(c)-shift)%10
            decrypted=decrypted+str(new_character)

        elif  c in punctuations:
            new_character=(punctuations.find(str(c))-shift)%30
            decrypted=decrypted+punctuations[new_character]

        else:
            encrypted +=c

    print("Encrypted text: ",text)
    print("Decrypted text: ",decrypted)

def aOneZ_26():
    text=input("Enter text: ")
    textL=text.lower()
    encrypted=""
    for c in textL:
        if c.isupper():
            c_index=ord(c)-96
            encrypted=encrypted+" "+str(c_index)

        elif c.islower():
            c_index=ord(c)-96
            encrypted=encrypted+" "+str(c_index)

    print("Plain text: ",text)
    print("Encryted text: ",encrypted[1:])

def De_aOneZ_26():
    text=input("Enter Encrypted text: ")
    decrypted=""
    text2=text.split()
    for c in text2:
        c=chr(int(c)+96)
        decrypted=decrypted+c

    print("Encrypted text: ",text)
    print("Decrypted text: ",decrypted)

def Vigenere():
    text=input("Enter text: ")
    text=text.upper()
    textLen=int(len(text))
    print("*Note: Key should include alphabets only*")
    key=input("Enter key:")
    key=key.upper()
    modKey=""
    encrypted=""
    keyLen=int(len(key))
    while(keyLen<=textLen):
        modKey=modKey+key
        keyLen=int(len(modKey))

    modKey=modKey[:textLen]
    key=list(modKey)
    for i in range(textLen):
        temp=(ord(text[i])+ord(key[i]))%26
        temp=temp+ord('A')
        encrypted=encrypted+chr(temp)

    print("Plain text: ",text)
    print("Encryted text: ",encrypted)

def De_Vigenere():
    text=input("Enter Encrypted text: ")
    text=text.upper()
    key=input("Enter the key:")
    key=key.upper()
    textLen=int(len(text))
    decrypted=""
    modKey=""
    keyLen=int(len(key))
    while(keyLen<=textLen):
        modKey=modKey+key
        keyLen=int(len(modKey))

    modKey=modKey[:textLen]
    key=list(modKey)
    for i in range(textLen):
        temp=(ord(text[i])-ord(key[i])+26)%26
        temp=temp+ord('A')
        decrypted=decrypted+chr(temp)

    print("Encrypted text: ",text)
    print("Decrypted text: ",decrypted)

def Bacon():
    text=input("Enter text: ")
    text2=text.upper()
    encrypted=""
    for c in text2:
        if c != " ":
            encrypted=encrypted+baconLookup[c]
        else:
            encrypted=encrypted+" "

    print("Plain text: ",text)
    print("Encryted text: ",encrypted)

def De_Bacon():
    text=input("Enter Encrypted text: ")
    decrypted=""
    i=0
    while True:
        if(i<len(text)):
            substring=text[i:i+5]
            if substring[0]!=' ':
                decrypted+=list(baconLookup.keys())[list(baconLookup.values()).index(substring)]
                i+=5
            else:
                decrypted+=' '
                i+=1
        else:
            break

    print("Encrypted text: ",text)
    print("Decrypted text: ",decrypted)

def end():
    print("/////////////////////////////////////////////////////////////\n//                                                         //\n//              Thank you for using Cyphr ^_^              //\n//             Made by justSid404 - Me \(^_^)/             //\n//                                                         //\n/////////////////////////////////////////////////////////////")
    exit()

state=0
option1=0
option2=0
text=""
punctuations='!"#$%&()*+,-./:;<=>?@[\^_`{|}~'
baconLookup={'A':'aaaaa','B':'aaaab','C':'aaaba','D':'aaabb','E':'aabaa',
            'F':'aabab','G':'aabba','H':'aabbb','I':'abaaa','J':'abaab',
            'K':'ababa','L':'ababb','M':'abbaa','N':'abbab','O':'abbba',
            'P':'abbbb','Q':'baaaa','R':'baaab','S':'baaba','T':'baabb',
            'U':'babaa','V':'babab','W':'babba','X':'babbb','Y':'bbaaa','Z':'bbaab'}

while state != "exit":
    if state==0:
        print("/////////////////////////////////////////////////////////////\n//    Welcome to                                           //\n//             //////               //                     //\n//             //                   //                     //\n//             //     //  // ////// ////// // ///          //\n//             //     //  // //  // //  // ///             //\n//             ////// ////// ////// //  // ///             //\n//                        // //                            //\n//                      //// //                            //\n//                                                         //\n/////////////////////////////////////////////////////////////")
        print("?????????????????????????????????????????????????????????????\n??                                                         ??\n??         1. Encode.                                      ??\n??         2. Decode.                                      ??\n??         3. Exit.                                        ??\n??                                                         ??\n?????????????????????????????????????????????????????????????")
        state=1
    elif state==1:
        option1=int(input())
        if option1==3:
            end()
        state=2
    elif state==2:
        print("?????????????????????????????????????????????????????????????\n??                                                         ??\n??         1. ROT13.                                       ??\n??         2. A1Z26 Cipher.                                ??\n??         3. Caesar Cipher.                               ??\n??         4. Vigenere Cipher.                             ??\n??         5. Bacon Cipher.                                ??\n??         6. Exit.                                        ??\n??                                                         ??\n?????????????????????????????????????????????????????????????")
        option2=int(input())
        state=3
    elif state==3:
        if option1==1:
            if option2==1:
                rot_13()
                print("?????????????????????????????????????????????????????????????\n??                                                         ??\n??         1. Encode.                                      ??\n??         2. Decode.                                      ??\n??         3. Exit.                                        ??\n??                                                         ??\n?????????????????????????????????????????????????????????????")
                state=1
            elif option2==2:
                aOneZ_26()
                print("?????????????????????????????????????????????????????????????\n??                                                         ??\n??         1. Encode.                                      ??\n??         2. Decode.                                      ??\n??         3. Exit.                                        ??\n??                                                         ??\n?????????????????????????????????????????????????????????????")
                state=1
            elif option2==3:
                caesar()
                print("?????????????????????????????????????????????????????????????\n??                                                         ??\n??         1. Encode.                                      ??\n??         2. Decode.                                      ??\n??         3. Exit.                                        ??\n??                                                         ??\n?????????????????????????????????????????????????????????????")
                state=1
            elif option2==4:
                Vigenere()
                print("?????????????????????????????????????????????????????????????\n??                                                         ??\n??         1. Encode.                                      ??\n??         2. Decode.                                      ??\n??         3. Exit.                                        ??\n??                                                         ??\n?????????????????????????????????????????????????????????????")
                state=1
            elif option2==5:
                Bacon()
                print("?????????????????????????????????????????????????????????????\n??                                                         ??\n??         1. Encode.                                      ??\n??         2. Decode.                                      ??\n??         3. Exit.                                        ??\n??                                                         ??\n?????????????????????????????????????????????????????????????")
                state=1
            elif option2==6:
                end()
            else:
                print("Invalid Choice")
        elif option1==2:
            if option2==1:
                De_rot_13()
                print("?????????????????????????????????????????????????????????????\n??                                                         ??\n??         1. Encode.                                      ??\n??         2. Decode.                                      ??\n??         3. Exit.                                        ??\n??                                                         ??\n?????????????????????????????????????????????????????????????")
                state=1
            elif option2==2:
                De_aOneZ_26()
                print("?????????????????????????????????????????????????????????????\n??                                                         ??\n??         1. Encode.                                      ??\n??         2. Decode.                                      ??\n??         3. Exit.                                        ??\n??                                                         ??\n?????????????????????????????????????????????????????????????")
                state=1
            elif option2==3:
                De_Caesar()
                print("?????????????????????????????????????????????????????????????\n??                                                         ??\n??         1. Encode.                                      ??\n??         2. Decode.                                      ??\n??         3. Exit.                                        ??\n??                                                         ??\n?????????????????????????????????????????????????????????????")
                state=1
            elif option2==4:
                De_Vigenere()
                print("?????????????????????????????????????????????????????????????\n??                                                         ??\n??         1. Encode.                                      ??\n??         2. Decode.                                      ??\n??         3. Exit.                                        ??\n??                                                         ??\n?????????????????????????????????????????????????????????????")
                state=1
            elif option2==5:
                De_Bacon()
                print("?????????????????????????????????????????????????????????????\n??                                                         ??\n??         1. Encode.                                      ??\n??         2. Decode.                                      ??\n??         3. Exit.                                        ??\n??                                                         ??\n?????????????????????????????????????????????????????????????")
                state=1
            elif option2==6:
                end()
            else:
                print("Invalid Choice")
